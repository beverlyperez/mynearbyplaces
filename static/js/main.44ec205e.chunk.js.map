{"version":3,"sources":["components/Login.js","serverInterface/data.js","serverInterface/server.js","components/Homepage.js","components/Place.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","onSubmit","event","state","username","trim","length","setState","authenticated","preventDefault","onInputChange","value","target","name","from","pathname","user","this","to","type","onChange","React","Component","data","city","rating","review","server","addPlace","push","getAllPlaces","HomePage","handleChange","newList","filter","item","lc","toLowerCase","includes","filtered","searchN","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","location","className","placeholder","Place","handleAddPlace","title","rev","Container","Row","Col","Form","Group","controlId","Label","Control","as","column","sm","Check","label","id","Button","variant","onClick","App","basename","process","exact","path","render","Homepage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6QAyDeA,E,kDArDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,SAAW,SAACC,GACJ,EAAKC,MAAMC,SAASC,OAAOC,OAAS,GACpC,EAAKC,SAAS,CAAEC,eAAe,IAEnCN,EAAMO,kBAdS,EAiBnBC,cAAgB,SAACR,GACb,IAAMS,EAAQT,EAAMU,OAAOD,MACrBE,EAAOX,EAAMU,OAAOC,KAC1B,EAAKN,SAAL,eAAiBM,EAAOF,KAlBxB,EAAKR,MAAQ,CACTC,SAAU,GACVI,eAAe,GAJJ,E,qDAyBf,IAAIM,EAAO,CAAEC,SAAU,IAAKZ,MAAO,CAAEa,KAAMC,KAAKd,MAAMC,WAEtD,OAAIa,KAAKd,MAAMK,cAEP,cAAC,IAAD,CAAUU,GAAIJ,IAMlB,8BACI,uBAAMb,SAAUgB,KAAKhB,SAArB,UACI,8CACA,uBACIkB,KAAK,OACLN,KAAK,WACLF,MAAOM,KAAKd,MAAMC,SAClBgB,SAAUH,KAAKP,gBAEnB,wBAAQS,KAAK,SAAb,4B,GA7CAE,IAAMC,W,QCDXC,EADR,CAAC,CAACV,KAAM,WAAYW,KAAM,SAAUrB,MAAO,UAAWsB,OAAQ,EAAGC,OAAQ,gBCQjEC,EADF,CAACC,SANC,SAACf,EAAMW,EAAMrB,EAAOsB,EAAQC,GACvCH,EAAKM,KAAK,CAAChB,KAAMA,EAAMW,KAAMA,EAAMrB,MAAOA,EAAOsB,OAAQA,EAAQC,OAAQA,KAK3CI,aAHf,WACf,OAAOP,ICmFIQ,E,kDApFb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAoBRgC,aAAe,SAAC9B,GACd,IAAMS,EAAQT,EAAMU,OAAOD,MACjBE,EAAOX,EAAMU,OAAOC,KAC1B,EAAKN,SAAL,eACKM,EAAOF,IAEEgB,EAAOG,aAAzB,IACIG,EAAU,GAKZA,EAHwB,KAAtB/B,EAAMU,OAAOC,KACDc,EAAOG,aAECI,QAAO,SAAAC,GAE3B,IAAMC,EAAKD,EAAKE,cAEVH,EAAShC,EAAMU,OAAOC,KAAKwB,cAEjC,OAAOD,EAAGE,SAASJ,MAGXP,EAAOG,aAEnB,EAAKvB,SAAS,CACZgC,SAAUN,KA3CZ,EAAK9B,MAAQ,CACXC,SAAU,GACVoC,QAAS,GACTD,SAAU,IALK,E,gEAWjBE,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDC,QAAQC,IAAI,gBAAiBF,EAASG,OAAOC,UAC7CH,QAAQC,IAAI,iBAAkBF,EAASG,OAAOE,WAC9ChC,KAAKV,SAAS,CAAEyC,SAAUJ,EAASG,OAAOC,WAC1C/B,KAAKV,SAAS,CAAE0C,UAAWL,EAASG,OAAOE,iB,+BAmC7C,IAAI7C,EAAW,GACT8C,EAAWjC,KAAKjB,MAAMkD,SAU5B,OATIA,IACFL,QAAQC,IAAII,GACRA,EAAS/C,OACP+C,EAAS/C,MAAMa,OACjBZ,EAAW8C,EAAS/C,MAAMa,OAM9B,sBAAKmC,UAAU,SAAf,UACE,8BAEE,qBAAKA,UAAU,cAAf,SACG/C,EAASE,OAAS,EAAIF,EACnB,cAAC,IAAD,CAAMc,GAAG,SAAT,uBAGR,sDACA,uBAAOC,KAAK,OAAOC,SAAUH,KAAKe,aAAcnB,KAAK,UAAUF,MAAOM,KAAKd,MAAMqC,QAASY,YAAY,cACtG,mBAAGvC,KAAK,WAAWF,MAAOM,KAAKd,MAAMoC,WACrC,uBACA,cAAC,IAAD,CAAMrB,GAAG,SAAT,kC,GA3EeG,IAAMC,W,+CC6Gd+B,E,kDAvGX,WAAYrD,GAAQ,IAAD,8BACf,cAAMA,IAUVsD,eAAiB,SAACpD,GACdyB,EAAOC,SAAS,EAAKzB,MAAMoD,MAAO,EAAKpD,MAAMqB,KAAM,EAAKrB,MAAMA,MAAO,EAAKA,MAAMsB,OAAQ,EAAKtB,MAAMqD,KACnGtD,EAAMO,kBAbS,EAkBnBC,cAAgB,SAACR,GACb,IAAMS,EAAQT,EAAMU,OAAOD,MACrBE,EAAOX,EAAMU,OAAOC,KAC1B,EAAKN,SAAL,eAAiBM,EAAOF,KAnBxB,EAAKR,MAAQ,CACToD,MAAO,GACP/B,KAAM,GACNrB,MAAO,GACPsB,OAAQ,EACR+B,IAAK,IAPM,E,qDAyBf,OACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAc7C,KAAK,OAAON,KAAK,QAAQuC,YAAY,sBAAsBzC,MAAOM,KAAKd,MAAMoD,MAC1FnC,SAAUH,KAAKP,mBAIpB,eAACkD,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAc7C,KAAK,OAAON,KAAK,OAAOuC,YAAY,gBAAgBzC,MAAOM,KAAKd,MAAMqB,KAChFJ,SAAUH,KAAKP,mBAEvB,eAACkD,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBAEA,cAACH,EAAA,EAAKI,QAAN,CAAc7C,KAAK,OAAMN,KAAK,QAAQuC,YAAY,iBAAiBzC,MAAOM,KAAKd,MAAMA,MACjFiB,SAAUH,KAAKP,mBAEnB,eAACkD,EAAA,EAAKC,MAAN,CAAYI,GAAIP,IAAK/C,MAAOM,KAAKd,MAAMsB,OAAQL,SAAUH,KAAKP,cAA9D,UACI,cAACkD,EAAA,EAAKG,MAAN,CAAYE,GAAG,SAASC,QAAM,EAACC,GAAI,EAAnC,qBAGA,eAACR,EAAA,EAAD,CAAKQ,GAAI,GAAT,UACI,cAACP,EAAA,EAAKQ,MAAN,CACIjD,KAAK,QACLkD,MAAM,UACNxD,KAAK,uBACLyD,GAAG,YAEP,cAACV,EAAA,EAAKQ,MAAN,CACIjD,KAAK,QACLkD,MAAM,UACNxD,KAAK,uBACLyD,GAAG,YAEP,cAACV,EAAA,EAAKQ,MAAN,CACIjD,KAAK,QACLkD,MAAM,UACNxD,KAAK,uBACLyD,GAAG,cAEP,cAACV,EAAA,EAAKQ,MAAN,CACIjD,KAAK,QACLkD,MAAM,UACNxD,KAAK,uBACLyD,GAAG,aAEP,cAACV,EAAA,EAAKQ,MAAN,CACIjD,KAAK,QACLkD,MAAM,UACNxD,KAAK,uBACLyD,GAAG,mBAIf,eAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAAtB,UACA,cAACF,EAAA,EAAKG,MAAN,sBAEA,cAACH,EAAA,EAAKI,QAAN,CAAc7C,KAAK,OAAON,KAAK,MAAMuC,YAAY,8BAA8BzC,MAAOM,KAAKd,MAAMqD,IAC7FpC,SAAUH,KAAKP,mBAEvB,cAAC6D,EAAA,EAAD,CAAQC,QAAQ,UAAUrD,KAAK,SAASsD,QAASxD,KAAKqC,eAAtD,uBAGC,uBACA,cAAC,IAAD,CAAMgB,GAAG,aAAapD,GAAG,IAAzB,kC,GAhGLG,IAAMC,W,MCsBXoD,MAlBf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,kBAAzB,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA/E,GAAK,OAAI,cAACgF,EAAD,eAAchF,OAGrD,cAAC,IAAD,CAAO8E,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,YCZOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44ec205e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            authenticated: false\r\n\r\n        };\r\n\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        if (this.state.username.trim().length > 0) {\r\n            this.setState({ authenticated: true });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        let from = { pathname: '/', state: { user: this.state.username } };\r\n\r\n        if (this.state.authenticated) {\r\n            return (\r\n                <Redirect to={from} />\r\n            );\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <lable>Username:</lable>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onInputChange}\r\n                    ></input>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Login;","let data = [];\r\ndata = [{name: \"someName\", city: \"Tucson\", state: \"Arizona\", rating: 5, review: \"some review\" }]\r\nexport default data;","import data from './data.js';\r\n\r\nlet addPlace = (name, city, state, rating, review) => {\r\n    data.push({name: name, city: city, state: state, rating: rating, review: review});\r\n}\r\nlet getAllPlaces = () => {\r\n    return data;\r\n}\r\nlet server = {addPlace: addPlace, getAllPlaces: getAllPlaces};\r\nexport default server;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport server from '../serverInterface/server';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      searchN: '',\r\n      filtered: []\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      console.log(\"Latitude is :\", position.coords.latitude);\r\n      console.log(\"Longitude is :\", position.coords.longitude);\r\n      this.setState({ latitude: position.coords.latitude });\r\n      this.setState({ longitude: position.coords.longitude });\r\n    });\r\n\r\n  }\r\n\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    let currentList = server.getAllPlaces;\r\n    let newList = [];\r\n\r\n    if (event.target.name !== \"\") {\r\n      currentList = server.getAllPlaces;\r\n\r\n      newList = currentList.filter(item => {\r\n\r\n        const lc = item.toLowerCase();\r\n\r\n        const filter = event.target.name.toLowerCase();\r\n\r\n        return lc.includes(filter);\r\n      });\r\n    } else {\r\n      newList = server.getAllPlaces;\r\n    }\r\n    this.setState({\r\n      filtered: newList\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let username = '';\r\n    const location = this.props.location;\r\n    if (location) {\r\n      console.log(location);\r\n      if (location.state) {\r\n        if (location.state.user) {\r\n          username = location.state.user;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"search\">\r\n        <div>\r\n\r\n          <div className=\"loginButton\">\r\n            {username.length > 0 ? username\r\n              : <Link to='/login'>Login</Link>}\r\n          </div>\r\n        </div>\r\n        <h1>Search nearby places</h1>\r\n        <input type=\"text\" onChange={this.handleChange} name=\"searchN\" value={this.state.searchN} placeholder=\"Search...\" />\r\n        <p name=\"filtered\" value={this.state.filtered}></p>\r\n        <br></br>\r\n        <Link to='/place'>Add New Place</Link>\r\n\r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport server from '../serverInterface/server';\r\n\r\nclass Place extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            city: \"\",\r\n            state: \"\",\r\n            rating: 0,\r\n            rev: \"\"\r\n        };\r\n    }\r\n\r\n    handleAddPlace = (event) => {\r\n        server.addPlace(this.state.title, this.state.city, this.state.state, this.state.rating, this.state.rev);\r\n        event.preventDefault();\r\n\r\n\r\n    }\r\n    \r\n    onInputChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter name of place\" value={this.state.title}\r\n                             onChange={this.onInputChange} />\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicCity\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"city\" placeholder=\"City of place\" value={this.state.city}\r\n                                onChange={this.onInputChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicState\">\r\n                            <Form.Label>State</Form.Label>\r\n\r\n                            <Form.Control type=\"text\"name=\"state\" placeholder=\"State of place\" value={this.state.state}\r\n                                onChange={this.onInputChange} />\r\n                        </Form.Group>\r\n                            <Form.Group as={Row} value={this.state.rating} onChange={this.onInputChange}>\r\n                                <Form.Label as=\"legend\" column sm={2}>\r\n                                    Rating:\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"1 star \"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"starOne\"\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"2 stars\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"starTwo\"\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"3 stars\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"starThree\"\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"4 stars\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"starFour\"\r\n                                    /> \r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        label=\"5 stars\"\r\n                                        name=\"formHorizontalRadios\"\r\n                                        id=\"starFive\"\r\n                                    />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicReview\">\r\n                            <Form.Label>Review:</Form.Label>\r\n\r\n                            <Form.Control type=\"text\" name=\"rev\" placeholder=\"Your thoughts on this place\" value={this.state.rev}\r\n                                onChange={this.onInputChange} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.handleAddPlace}>\r\n                            Add place\r\n                         </Button>\r\n                         <br></br>\r\n                         <Link id=\"returnHome\" to='/'>Go back</Link>\r\n                    </Form></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Place;","import React from 'react';\r\nimport Login from './components/Login';\r\nimport Homepage from './components/Homepage';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Place from './components/Place';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <Route exact path='/' render={props => <Homepage {...props} />}>\r\n\r\n      </Route>\r\n      <Route path='/login' >\r\n        <Login />\r\n      </Route>\r\n      <Route path='/place' >\r\n        <Place />\r\n      </Route>\r\n    </Switch>\r\n  </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}